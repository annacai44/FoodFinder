{"version":3,"sources":["components/Navbar/styles.js","components/Navbar/Navbar.js","components/Posts/Post/styles.js","api/index.js","actions/posts.js","components/Posts/Post/Post.js","constants/actionTypes.js","components/Posts/styles.js","components/Posts/Posts.js","components/Home/Home.js","components/Auth/styles.js","components/Auth/Auth.js","components/Form/styles.js","components/Form/Form.js","App.js","reducers/auth.js","reducers/index.js","reducers/posts.js","index.js"],"names":["makeStyles","theme","appBar","padding","backgroundColor","position","breakpoints","down","heading","color","textDecoration","banner","signInButton","up","marginLeft","homeButton","postButton","marginRight","marginBottom","image","icon","fontSize","userName","display","alignItems","brandContainer","buttonGroup","flexDirection","Navbar","classes","useStyles","useState","JSON","parse","localStorage","getItem","user","setUser","dispatch","useDispatch","location","useHistory","useLocation","onAuth","setOnAuth","matches","useMediaQuery","logout","googleLogout","type","window","reload","useEffect","token","decode","exp","Date","getTime","AppBar","className","Toolbar","style","justifyContent","Typography","component","Link","to","variant","align","undefined","Button","onClick","minHeight","media","height","border","cardContent","fullHeightCard","card","borderRadius","overlay","top","left","overlay2","right","grid","details","margin","field","cardActions","likeButton","heartIcon","API","axios","create","baseURL","interceptors","request","use","req","headers","authorization","updatePost","id","updatedPost","patch","deletePost","delete","likePost","Post","post","setCurrentId","history","Likes","likes","length","find","like","result","sub","_id","Card","CardMedia","selectedFile","disabled","size","api","data","payload","console","log","creator","push","CardContent","gutterBottom","description","name","CardActions","moment","createdAt","fromNow","toUpperCase","mainContainer","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","posts","isLoading","CircularProgress","Grid","container","map","key","item","xs","Home","Grow","in","Container","maxWidth","paper","marginTop","root","avatar","palette","secondary","main","form","width","submit","googleButton","Auth","googleSuccess","res","jwt_decode","credential","err","Paper","elevation","Avatar","onSuccess","onFailure","cookiePolicy","hosted_domain","flexWrap","fileInput","buttonSubmit","Form","currentId","postData","setPostData","clear","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","required","label","fullWidth","value","onChange","target","multiple","onDone","base64","App","get","clientId","maxwidth","path","exact","authReducer","authData","action","setItem","stringify","loading","combineReducers","filter","auth","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5121ef4.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nexport default makeStyles((theme) => ({\n  appBar: {\n    padding: '15px 30px',\n    backgroundColor: '#684a98',\n    position: 'sticky',\n    [theme.breakpoints.down('xs')]: {\n      padding: '15px 10px',\n    },\n  },\n  heading: {\n    color: 'white',\n    textDecoration: 'none',\n  },\n  banner: {\n    color: 'white'\n  },\n  signInButton: {\n    backgroundColor: 'white',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: '115px'\n    },\n  },\n  homeButton: {\n    backgroundColor: 'white',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: '125px'\n    },\n  },\n  postButton: {\n    backgroundColor: 'white',\n    marginRight: '20px',\n    [theme.breakpoints.down('xs')]: {\n      marginRight: '0px',\n      marginBottom: '10px',\n    },\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  icon: {\n    color: 'white',\n    fontSize: '35px'\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  brandContainer: {\n    display: 'flex'\n  },\n  buttonGroup: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n  }\n}));","import React, { useState, useEffect } from 'react';\nimport { AppBar, Typography, Button, Toolbar } from '@material-ui/core';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport { googleLogout } from '@react-oauth/google';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// makes react apps multi-page\nimport { Link, useHistory, useLocation } from 'react-router-dom';\n\nconst Navbar = () => {\n    const classes = useStyles();\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n    const [onAuth, setOnAuth] = useState(false);\n    const matches = useMediaQuery('(min-width:900px)');\n\n    const logout = () => {\n        setUser(null);\n        googleLogout();\n        setOnAuth(false);\n        dispatch({ type: 'LOGOUT' });\n        window.location.reload();\n    }\n\n    useEffect(() => {\n        const token = user?.token;\n\n        if (token) {\n            const decodedToken = decode(token);\n\n            if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n        }\n\n        setUser(JSON.parse(localStorage.getItem('profile')));\n    }, [location]);\n\n\n\n    return (\n        <>\n        <AppBar className={classes.appBar} color='inherit'>\n            <Toolbar style={{display: 'flex', justifyContent: 'space-between'}}>\n            <div className={classes.brandContainer}>\n                <Typography component={Link} to=\"/FoodFinder\" className={classes.heading} variant=\"h4\" align=\"center\">FoodFinder</Typography>\n                <FastfoodIcon className={classes.icon}/>\n            </div>\n            {matches ? <Typography variant='h6' className={classes.banner}>Share leftover food on campus by posting here!</Typography> : undefined}\n            {user ? (\n                <div className={classes.buttonGroup}>\n                    <Button className={classes.postButton} component={Link} to=\"/FoodFinder/post\" variant='contained'>Post</Button>\n                    <Button variant='contained' style={{backgroundColor: 'white'}} onClick={logout}>Logout</Button>\n                </div>\n            ) : (\n                // this button redirects us to a different page where we'll show the authentication\n                (!onAuth ? <Button className={classes.signInButton} component={Link} to=\"/FoodFinder/auth\" onClick={() => setOnAuth(true)} variant=\"contained\">Sign In</Button>\n                : <Button className={classes.homeButton} component={Link} to=\"/FoodFinder\" onClick={() => setOnAuth(false)} variant=\"contained\">Home</Button>)\n            )}\n            </Toolbar>\n        </AppBar>\n        <Toolbar style={{minHeight: '24px'}}/>\n        </>\n    )\n}\n\nexport default Navbar;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    padding: '50%'\n  },\n  border: {\n    border: 'solid',\n  },\n  cardContent: {\n    padding: '0',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: '14px',\n    marginBottom: '5px'\n  },\n  field: {\n    padding: '0 30px',\n  },\n  cardActions: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '8px 14px 8px 20px'\n  },\n  likeButton: {\n    color: 'purple',\n    fontSize: '18px'\n  },\n  heartIcon: {\n    color: 'purple'\n  }\n});","// axios is used to implement/make API calls\n// axios performs HTTP requests on a particular URL; axios is promise-based\nimport axios from 'axios';\n\n// axios instance; we want API to make calls to /posts\n// http://localhost:5010\nconst API = axios.create({ baseURL: 'https://foodfinder-nu.herokuapp.com'});\n\n// need to add something to each one of our requests\n// the callback function happens on each request, and the function happens before the request gets carried out\n// we need to send our token to the backend so the backend middleware can verify that we're logged in\n// With this, our backend will be able to get a specific header\nAPI.interceptors.request.use((req) => {\n    if (localStorage.getItem('profile')) {\n        // add authorization to each and every request\n        req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n    }\n    return req;\n});\n\n// the GET request returns all the posts in the database\nexport const fetchPosts = () => API.get('/posts');\n\n// newPost is the POST payload/data\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);","import * as api from '../api';\nimport { FETCH_ALL, CREATE, UPDATE, DELETE, START_LOADING, END_LOADING } from '../constants/actionTypes';\n\nexport const getPosts = () => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        const { data } = await api.fetchPosts();\n        // dispatch an action from the data from the backend\n        dispatch({ type: FETCH_ALL, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        const { data } = await api.createPost(post);\n        dispatch({ type: CREATE, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        const { data } = await api.updatePost(id, post);\n        dispatch({ type: UPDATE, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({ type: DELETE, payload: id })\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id);\n        dispatch({ type: UPDATE, payload: data });\n     } catch (err) {\n         console.log(err);\n     }\n}","import React from \"react\";\nimport useStyles from './styles';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport moment from 'moment';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { useDispatch } from 'react-redux';\nimport { deletePost, likePost } from \"../../../actions/posts\";\nimport { useHistory } from 'react-router-dom';\n\nconst Post = ({ post, setCurrentId }) => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const user = JSON.parse(localStorage.getItem('profile'));\n    const history = useHistory();\n\n    const Likes = () => {\n        if (post?.likes?.length > 0) {\n            // _id is custom id we gave from database\n            return post.likes.find((like) => like === (user?.result?.sub || user?.result?._id))\n                ? (\n                <><FavoriteIcon fontSize=\"medium\" className={classes.heartIcon} />&nbsp;{`${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\n                ) : (\n                <><FavoriteBorderIcon fontSize=\"medium\" className={classes.heartIcon} />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\n                );\n        }\n        return <><FavoriteBorderIcon fontSize=\"medium\" className={classes.heartIcon} />&nbsp;Like</>;\n    };\n\n    // const postTimeDifference = moment().diff(moment(post.createdAt), 'hours');\n    // if (postTimeDifference >= 24) {\n    //     dispatch(deletePost(post._id));\n    //     return null;\n    // }\n\n    const editPost = () => {\n        setCurrentId(post._id);\n        history.push('/FoodFinder/post');\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardMedia className={classes.media} image={post.selectedFile}/>\n            <div className={classes.details}>\n                <Button disabled={!user?.result} size='medium' className={classes.likeButton} onClick={()=> dispatch(likePost(post._id))}>\n                    <Likes />\n                </Button>\n                {(user?.result?.sub === post?.creator || user?.result?._id === post?.creator) && (\n                    <Button variant='outlined' style={{marginRight: 0}} size='small' onClick={editPost}>\n                        Edit\n                    </Button>\n                )}\n            </div>\n            <CardContent className={classes.cardContent}>\n                <Typography className={classes.field} variant='h5' gutterBottom><b>Food:</b> {post.description}</Typography>\n                <Typography className={classes.field} variant='h5' gutterBottom><b>Location:</b> {post.location}</Typography>\n                <Typography className={classes.field} variant='h5' gutterBottom><b>Posted by:</b> {post.name} </Typography>\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Typography variant='body2'>{moment(post.createdAt).fromNow().toUpperCase()}</Typography>\n                {(user?.result?.sub === post?.creator || user?.result?._id === post?.creator) && (\n                    <Button size='small' variant='outlined' color='secondary' onClick={() => dispatch(deletePost(post._id))}>\n                        Delete\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Post;","export const FETCH_ALL = 'FETCH_ALL';\nexport const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';\nexport const START_LOADING = 'START_LOADING';\nexport const END_LOADING = 'END_LOADING';","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));","import React from \"react\";\nimport { useSelector } from 'react-redux';\nimport Post from './Post/Post.js';\nimport useStyles from './styles';\nimport { Typography, Grid, CircularProgress } from '@material-ui/core';\n\nconst Posts = ({ setCurrentId }) => {\n    // fetch data from global redux store\n    const {isLoading, posts} = useSelector((state) => state.posts);\n    const classes = useStyles();\n\n    console.log(posts);\n    \n    if (!posts.length && !isLoading) return (\n        <Typography align='center' variant='h2'>No leftover food available at this time. Check back later!</Typography>\n    );\n\n    return (\n        isLoading ? <CircularProgress /> : (\n                <Grid className={classes.container} container alignItems='stretch' spacing={3}>\n                    {posts?.map((post) => (\n                        <Grid key={post._id} item xs={12}>\n                            <Post post={post} setCurrentId={setCurrentId}/>\n                        </Grid>\n                    ))}\n                </Grid> \n            )\n    )\n}\n\nexport default Posts;","import React from 'react';\nimport { Grow, Container } from '@material-ui/core';\nimport Posts from '../Posts/Posts';\n\nconst Home = ({ setCurrentId }) => {\n\n    return (\n        <Grow in>\n            <Container maxWidth=\"sm\">\n                <Posts setCurrentId={setCurrentId}/>\n            </Container>\n        </Grow>\n    )\n}\n\nexport default Home;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));","import React from 'react';\nimport { Avatar, Paper, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\n\nconst Auth = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // we get access to a full response\n    const googleSuccess = async (res) => {\n        // ?. ensures that an error will not be thrown if we don't have a res object; it will just say res is undefined\n        const result = jwt_decode(res?.credential);\n        const token = res?.credential;\n\n        console.log(result);\n\n        // if our login is successful, we want to dispatch something\n        try {\n            dispatch({ type: 'AUTH', data: { result, token } });\n            // history belongs to react-router-dom\n            history.push('/FoodFinder');\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const googleFailure = (err) => {\n        console.log(err);\n        console.log(\"Google Sign In was unsuccessful. Try again later.\")\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography variant='h6' align='center'>\n                    Must sign in with Northwestern email to post and edit posts on FoodFinder.\n                </Typography>\n                    <GoogleLogin \n                        onSuccess={googleSuccess}\n                        onFailure={googleFailure}\n                        cookiePolicy='single_host_origin'\n                        hosted_domain=\"u.northwestern.edu\"\n                    />\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Auth;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));","import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper, Container } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost, getPosts } from '../../actions/posts';\nimport { useHistory } from 'react-router-dom';\n\nimport useStyles from './styles';\n\nconst Form = ({ currentId, setCurrentId }) => {\n    // setState does not merge an object; it overrides all of the old state. Therefore, when we call it, we must spread out our prev state using ...\n    // useState() creates a state for the component\n    const [postData, setPostData] = useState({ description: '', location: '', name: '', selectedFile: '' });\n    // we only want the data for the updated post, not all the posts\n    const post = useSelector((state) => currentId ? state.posts.posts.find((post) => post._id === currentId) : null);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // this hook runs a function EVERY RENDER of the component; the component renders initially when it first loads and when the state changes\n    // a way to run code on every render\n    useEffect(() => {\n        if (post) setPostData(post);\n    }, [post]);\n\n    const clear = () => {\n        setCurrentId(null);\n        setPostData({ description: '', location: '', name: '', selectedFile: '' });\n    }\n\n    // once the user submits, this function will send over a POST request with all the data the user typed in\n    const handleSubmit = (e) => {\n        // the default action of a form being submitted is to refresh the page, and this prevents this\n        e.preventDefault();\n\n        if (currentId) {\n            dispatch(updatePost(currentId, postData));\n        } else {\n            dispatch(createPost(postData));\n        }\n        clear();\n        history.push('/FoodFinder');\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <Paper className={classes.paper}>\n                <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                    <Typography variant='h6'>Post your leftover food!</Typography>\n                    {/* 'value' is going to be stored in the state postData. Each object key is going to be a specific test field. */}\n                    {/* onChange changes the value of the state field. */}\n                    <TextField required name='description' variant='outlined' label='Description of food' fullWidth value={postData.description} onChange={(e) => setPostData({ ...postData, description: e.target.value })}/>\n                    <TextField required name='location' variant='outlined' label='Location' fullWidth value={postData.location} onChange={(e) => setPostData({ ...postData, location: e.target.value })}/>\n                    <TextField required name='name' variant='outlined' label='Name/Organization' fullWidth value={postData.name} onChange={(e) => setPostData({ ...postData, name: e.target.value })}/>\n                    <div className={classes.fileInput}>\n                        <FileBase type='file' multiple={false} onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}/>\n                    </div>\n                    <Button className={classes.buttonSubmit} variant='contained' color='primary' size='large' type='submit' fullWidth>Submit</Button>\n                    <Button variant='contained' color='secondary' size='small' onClick={clear} fullWidth>Clear</Button>\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Form;","import React, { useEffect, useState } from \"react\";\nimport { Container } from '@material-ui/core';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Home from \"./components/Home/Home\";\nimport Auth from \"./components/Auth/Auth\";\nimport Form from \"./components/Form/Form\";\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from './actions/posts';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n    const [currentId, setCurrentId] = useState(null);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        // ensures that for every change, we're going to get new post(s)\n        dispatch(getPosts());\n    }, [dispatch]);\n\n    return (\n    <GoogleOAuthProvider clientId='459151855029-k0f07ac9ad193qhq61db5e5ro63qc3bh.apps.googleusercontent.com'>\n        <BrowserRouter>\n                <Navbar />\n                <Container maxwidth=\"lg\">\n                    <Switch>\n                        <Route path=\"/FoodFinder\" exact>\n                            <Home setCurrentId={setCurrentId}/>\n                        </Route>\n                        <Route path=\"/FoodFinder/auth\" exact>\n                            <Auth />\n                        </Route>\n                        <Route path=\"/FoodFinder/post\" exact>\n                            <Form currentId={currentId} setCurrentId={setCurrentId}/>\n                        </Route>\n                    </Switch>\n                </Container>\n        </BrowserRouter>\n    </GoogleOAuthProvider>\n    )\n};\n\nexport default App;","import { AUTH, LOGOUT } from '../constants/actionTypes';\n\nconst authReducer = (state = { authData: null }, action) => {\n    switch (action.type) {\n        case AUTH:\n            // setting all of the data of the login to the localStorage\n            localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\n            return { ...state, loading: false, authData: action?.data };\n        case LOGOUT:\n            localStorage.clear();\n            return { ...state, loading: false, authData: null };\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","import { combineReducers } from \"redux\";\nimport posts from './posts';\nimport auth from './auth';\n\n// put in all the individual reducers that we have\nexport default combineReducers({ posts, auth });","import { FETCH_ALL, CREATE, UPDATE, DELETE, START_LOADING, END_LOADING } from '../constants/actionTypes';\n\n// state must always be equal to something; the initial value of the state is [] bc there are no posts initially\n// based on the action type, the reducer returns the state CHANGED by the action\nexport default (state = {isLoading: true, posts: []}, action) => {\n    switch (action.type) {\n        case START_LOADING:\n            return { ...state, isLoading: true };\n        case END_LOADING:\n            return { ...state, isLoading: false };\n        case FETCH_ALL:\n            return { ...state, posts: action.payload };\n        case CREATE:\n            // we have to send over an array of posts; first we spread all the posts, and then we add a new post\n            return { ...state, posts: [action.payload, ...state.posts] };\n        case UPDATE:\n            // action.payload is the updated post. we are looking for the post that should be changed\n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n        case DELETE:\n            return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n        default:\n            return state;\n    }\n}","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Provider keeps track of store, the global state, and it allows us to access that store from anywhere inside the app\nimport { Provider } from 'react-redux';\nimport { legacy_createStore as createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport './index.css';\n\n// safely holds the state of the entire application\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);"],"sourceRoot":""}