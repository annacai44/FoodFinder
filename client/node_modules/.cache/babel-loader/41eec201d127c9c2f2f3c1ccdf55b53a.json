{"ast":null,"code":"var _jsxFileName = \"/Users/annacai/Desktop/material-ui-demo/client/src/components/Auth/Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin, googleLogout } from '@react-oauth/google';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './icon'; // import { GoogleLogin } from '@react-oauth/google';\n\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    e.preventDefault();\n    console.log(formData);\n  };\n\n  const handleChange = () => {}; // whenever you change the state using the previous state, you should call a callback function\n\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup); // handleShowPassword();\n  }; // we get access to a full response\n\n\n  const googleSuccess = async res => {\n    // ?. ensures that an error will not be thrown if we don't have a res object; it will just say res is undefined\n    const result = jwt_decode(res === null || res === void 0 ? void 0 : res.credential);\n    const token = res === null || res === void 0 ? void 0 : res.credential; // if our login is successful, we want to dispatch something\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      }); // history belongs to react-router-dom\n\n      history.push('/');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const googleFailure = err => {\n    console.log(err);\n    console.log(\"Google Sign In was unsuccessful. Try again later.\");\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 39\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.submit,\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"GOOGLE ID\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 44\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"))))));\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","googleLogout","useDispatch","useHistory","jwt_decode","LockOutlinedIcon","useStyles","Input","Icon","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","showPassword","setShowPassword","formData","setFormData","isSignup","setIsSignup","dispatch","history","handleSubmit","e","preventDefault","console","log","handleChange","handleShowPassword","prevShowPassword","switchMode","prevIsSignup","googleSuccess","res","result","credential","token","type","data","push","err","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"sources":["/Users/annacai/Desktop/material-ui-demo/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState }from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin, googleLogout } from '@react-oauth/google';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './icon';\n// import { GoogleLogin } from '@react-oauth/google';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: ''};\n\nconst Auth = () => {\n    const classes = useStyles();\n    const [showPassword, setShowPassword] = useState(false);\n    const [formData, setFormData] = useState(initialState);\n    const [isSignup, setIsSignup] = useState(false);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const handleSubmit = () => {\n        e.preventDefault();\n        console.log(formData);\n    };\n\n    const handleChange = () => {\n\n    }\n\n    // whenever you change the state using the previous state, you should call a callback function\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\n\n    const switchMode = () => {\n        setIsSignup((prevIsSignup) => !prevIsSignup);\n        // handleShowPassword();\n    }\n\n    // we get access to a full response\n    const googleSuccess = async (res) => {\n        // ?. ensures that an error will not be thrown if we don't have a res object; it will just say res is undefined\n        const result = jwt_decode(res?.credential);\n        const token = res?.credential;\n\n        // if our login is successful, we want to dispatch something\n        try {\n            dispatch({ type: 'AUTH', data: { result, token } });\n            // history belongs to react-router-dom\n            history.push('/');\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const googleFailure = (err) => {\n        console.log(err);\n        console.log(\"Google Sign In was unsuccessful. Try again later.\")\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography variant='h5'>\n                    {isSignup ? 'Sign Up' : 'Sign In'}\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        {isSignup && (\n                            <>\n                                <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                                <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n                            </>\n                        )}\n                        <Input name='email' label='Email Address' handleChange={handleChange} type=\"email\" />\n                        <Input name='password' label='Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword}/>\n                        { isSignup && <Input name='confirmPassword' label='Repeat Password' handleChange={handleChange} type='password'/> }\n                    </Grid>\n                    <Button className={classes.submit} type='submit' fullWidth variant='contained' color='primary'>\n                        { isSignup ? 'Sign Up' : 'Sign In' }\n                    </Button>\n                    <GoogleLogin \n                        clientId=\"GOOGLE ID\"\n                        render={(renderProps) => (\n                            <Button \n                                className={classes.googleButton} \n                                color='primary' \n                                fullWidth \n                                onClick={renderProps.onClick} \n                                disabled={renderProps.disabled} \n                                startIcon={<Icon />} \n                                variant='contained'>\n                                Google Sign In\n                            </Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleFailure}\n                        cookiePolicy='single_host_origin'\n                    />\n                    <Grid container justifyContent='flex-end'>\n                        <Grid item>\n                            <Button onClick={switchMode}>\n                                { isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Auth;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,IAAhC,EAAsCC,UAAtC,EAAkDC,SAAlD,QAAmE,mBAAnE;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,qBAA1C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AAEA,MAAMC,YAAY,GAAG;EAAEC,SAAS,EAAE,EAAb;EAAiBC,QAAQ,EAAE,EAA3B;EAA+BC,KAAK,EAAE,EAAtC;EAA0CC,QAAQ,EAAE,EAApD;EAAwDC,eAAe,EAAE;AAAzE,CAArB;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACf,MAAMC,OAAO,GAAGV,SAAS,EAAzB;EACA,MAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAACgB,YAAD,CAAxC;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM8B,QAAQ,GAAGrB,WAAW,EAA5B;EACA,MAAMsB,OAAO,GAAGrB,UAAU,EAA1B;;EAEA,MAAMsB,YAAY,GAAG,MAAM;IACvBC,CAAC,CAACC,cAAF;IACAC,OAAO,CAACC,GAAR,CAAYV,QAAZ;EACH,CAHD;;EAKA,MAAMW,YAAY,GAAG,MAAM,CAE1B,CAFD,CAbe,CAiBf;;;EACA,MAAMC,kBAAkB,GAAG,MAAMb,eAAe,CAAEc,gBAAD,IAAsB,CAACA,gBAAxB,CAAhD;;EAEA,MAAMC,UAAU,GAAG,MAAM;IACrBX,WAAW,CAAEY,YAAD,IAAkB,CAACA,YAApB,CAAX,CADqB,CAErB;EACH,CAHD,CApBe,CAyBf;;;EACA,MAAMC,aAAa,GAAG,MAAOC,GAAP,IAAe;IACjC;IACA,MAAMC,MAAM,GAAGjC,UAAU,CAACgC,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEE,UAAN,CAAzB;IACA,MAAMC,KAAK,GAAGH,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,UAAnB,CAHiC,CAKjC;;IACA,IAAI;MACAf,QAAQ,CAAC;QAAEiB,IAAI,EAAE,MAAR;QAAgBC,IAAI,EAAE;UAAEJ,MAAF;UAAUE;QAAV;MAAtB,CAAD,CAAR,CADA,CAEA;;MACAf,OAAO,CAACkB,IAAR,CAAa,GAAb;IACH,CAJD,CAIE,OAAOC,GAAP,EAAY;MACVf,OAAO,CAACC,GAAR,CAAYc,GAAZ;IACH;EACJ,CAbD;;EAeA,MAAMC,aAAa,GAAID,GAAD,IAAS;IAC3Bf,OAAO,CAACC,GAAR,CAAYc,GAAZ;IACAf,OAAO,CAACC,GAAR,CAAY,mDAAZ;EACH,CAHD;;EAKA,oBACI,oBAAC,SAAD;IAAW,SAAS,EAAC,MAArB;IAA4B,QAAQ,EAAC,IAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,KAAD;IAAO,SAAS,EAAEb,OAAO,CAAC6B,KAA1B;IAAiC,SAAS,EAAE,CAA5C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,MAAD;IAAQ,SAAS,EAAE7B,OAAO,CAAC8B,MAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,gBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ,eAII,oBAAC,UAAD;IAAY,OAAO,EAAC,IAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKzB,QAAQ,GAAG,SAAH,GAAe,SAD5B,CAJJ,eAOI;IAAM,SAAS,EAAEL,OAAO,CAAC+B,IAAzB;IAA+B,QAAQ,EAAEtB,YAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,IAAD;IAAM,SAAS,MAAf;IAAgB,OAAO,EAAE,CAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKJ,QAAQ,iBACL,uDACI,oBAAC,KAAD;IAAO,IAAI,EAAC,WAAZ;IAAwB,KAAK,EAAC,YAA9B;IAA2C,YAAY,EAAES,YAAzD;IAAuE,SAAS,MAAhF;IAAiF,IAAI,MAArF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI,oBAAC,KAAD;IAAO,IAAI,EAAC,UAAZ;IAAuB,KAAK,EAAC,WAA7B;IAAyC,YAAY,EAAEA,YAAvD;IAAqE,IAAI,MAAzE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CAFR,eAOI,oBAAC,KAAD;IAAO,IAAI,EAAC,OAAZ;IAAoB,KAAK,EAAC,eAA1B;IAA0C,YAAY,EAAEA,YAAxD;IAAsE,IAAI,EAAC,OAA3E;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPJ,eAQI,oBAAC,KAAD;IAAO,IAAI,EAAC,UAAZ;IAAuB,KAAK,EAAC,UAA7B;IAAwC,YAAY,EAAEA,YAAtD;IAAoE,IAAI,EAAEb,YAAY,GAAG,MAAH,GAAY,UAAlG;IAA8G,kBAAkB,EAAEc,kBAAlI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARJ,EASMV,QAAQ,iBAAI,oBAAC,KAAD;IAAO,IAAI,EAAC,iBAAZ;IAA8B,KAAK,EAAC,iBAApC;IAAsD,YAAY,EAAES,YAApE;IAAkF,IAAI,EAAC,UAAvF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EATlB,CADJ,eAYI,oBAAC,MAAD;IAAQ,SAAS,EAAEd,OAAO,CAACgC,MAA3B;IAAmC,IAAI,EAAC,QAAxC;IAAiD,SAAS,MAA1D;IAA2D,OAAO,EAAC,WAAnE;IAA+E,KAAK,EAAC,SAArF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACM3B,QAAQ,GAAG,SAAH,GAAe,SAD7B,CAZJ,eAeI,oBAAC,WAAD;IACI,QAAQ,EAAC,WADb;IAEI,MAAM,EAAG4B,WAAD,iBACJ,oBAAC,MAAD;MACI,SAAS,EAAEjC,OAAO,CAACkC,YADvB;MAEI,KAAK,EAAC,SAFV;MAGI,SAAS,MAHb;MAII,OAAO,EAAED,WAAW,CAACE,OAJzB;MAKI,QAAQ,EAAEF,WAAW,CAACG,QAL1B;MAMI,SAAS,eAAE,oBAAC,IAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EANf;MAOI,OAAO,EAAC,WAPZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,oBAHR;IAcI,SAAS,EAAEjB,aAdf;IAeI,SAAS,EAAES,aAff;IAgBI,YAAY,EAAC,oBAhBjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAfJ,eAiCI,oBAAC,IAAD;IAAM,SAAS,MAAf;IAAgB,cAAc,EAAC,UAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,MAAD;IAAQ,OAAO,EAAEX,UAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACMZ,QAAQ,GAAG,kCAAH,GAAwC,gCADtD,CADJ,CADJ,CAjCJ,CAPJ,CADJ,CADJ;AAqDH,CAnGD;;AAqGA,eAAeN,IAAf"},"metadata":{},"sourceType":"module"}