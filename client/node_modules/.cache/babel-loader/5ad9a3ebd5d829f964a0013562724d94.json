{"ast":null,"code":"var _jsxFileName = \"/Users/annacai/Desktop/material-ui-demo/client/src/components/Auth/Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin, googleLogout } from '@react-oauth/google';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './icon'; // import { GoogleLogin } from '@react-oauth/google';\n\nconst Auth = () => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {}; // whenever you change the state using the previous state, you should call a callback function\n\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup); // handleShowPassword();\n  }; // we get access to a full response\n\n\n  const googleSuccess = res => {\n    console.log(res);\n  };\n\n  const googleFailure = () => {\n    console.log(\"Google Sign In was unsuccessful. Try again later.\");\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 39\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.submit,\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"GOOGLE ID\" // render={(renderProps) => (\n    //     <Button \n    //         className={classes.googleButton} \n    //         color='primary' \n    //         fullWidth \n    //         onClick={renderProps.onClick} \n    //         disabled={renderProps.disabled} \n    //         startIcon={<Icon />} \n    //         variant='contained'>\n    //         Google Sign In\n    //     </Button>\n    // )}\n    ,\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"))))));\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","googleLogout","LockOutlinedIcon","useStyles","Input","Icon","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignup","handleSubmit","handleChange","handleShowPassword","prevShowPassword","switchMode","prevIsSignup","googleSuccess","res","console","log","googleFailure","paper","avatar","form","submit"],"sources":["/Users/annacai/Desktop/material-ui-demo/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState }from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin, googleLogout } from '@react-oauth/google';\n\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './icon';\n// import { GoogleLogin } from '@react-oauth/google';\n\n\nconst Auth = () => {\n    const classes = useStyles();\n    const [showPassword, setShowPassword] = useState(false);\n    const [isSignup, setIsSignup] = useState(false);\n\n    const handleSubmit = () => {\n\n    };\n\n    const handleChange = () => {\n\n    }\n\n    // whenever you change the state using the previous state, you should call a callback function\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\n\n    const switchMode = () => {\n        setIsSignup((prevIsSignup) => !prevIsSignup);\n        // handleShowPassword();\n    }\n\n    // we get access to a full response\n    const googleSuccess = (res) => {\n        console.log(res);\n    }\n\n    const googleFailure = () => {\n        console.log(\"Google Sign In was unsuccessful. Try again later.\")\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography variant='h5'>\n                    {isSignup ? 'Sign Up' : 'Sign In'}\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        {isSignup && (\n                            <>\n                                <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                                <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n                            </>\n                        )}\n                        <Input name='email' label='Email Address' handleChange={handleChange} type=\"email\" />\n                        <Input name='password' label='Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword}/>\n                        { isSignup && <Input name='confirmPassword' label='Repeat Password' handleChange={handleChange} type='password'/> }\n                    </Grid>\n                    <Button className={classes.submit} type='submit' fullWidth variant='contained' color='primary'>\n                        { isSignup ? 'Sign Up' : 'Sign In' }\n                    </Button>\n                    <GoogleLogin \n                        clientId=\"GOOGLE ID\"\n                        // render={(renderProps) => (\n                        //     <Button \n                        //         className={classes.googleButton} \n                        //         color='primary' \n                        //         fullWidth \n                        //         onClick={renderProps.onClick} \n                        //         disabled={renderProps.disabled} \n                        //         startIcon={<Icon />} \n                        //         variant='contained'>\n                        //         Google Sign In\n                        //     </Button>\n                        // )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleFailure}\n                        cookiePolicy='single_host_origin'\n                    />\n                    <Grid container justifyContent='flex-end'>\n                        <Grid item>\n                            <Button onClick={switchMode}>\n                                { isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}