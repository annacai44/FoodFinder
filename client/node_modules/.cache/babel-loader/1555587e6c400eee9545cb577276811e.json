{"ast":null,"code":"var _jsxFileName = \"/Users/annacai/Desktop/material-ui-demo/client/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Grow, Grid, Container } from '@material-ui/core';\nimport useStyles from './styles';\nimport Posts from './components/Posts/Posts.js';\nimport Form from './components/Form/Form.js';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from './actions/posts';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"; // have to keep track of the current post id in APP.JS bc we have to share the state of current id between the post and form,\n// and our app is the only parent component that is parent to both post and form\n\nconst App = () => {\n  const [currentId, setCurrentId] = useState(null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // dispatch getPosts action, which ensures that for every change, we're going to get new post(s)\n    dispatch(getPosts());\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Container, {\n    maxwidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grow, {\n    in: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.mainContainer,\n    container: true,\n    justifyContent: \"space-between\",\n    alignitems: \"stretch\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Posts, {\n    setCurrentId: setCurrentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    currentId: currentId,\n    setCurrentId: setCurrentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default App; // <>\n//     <CssBaseline />\n//     <main className={classes.entireBody}>\n// <AppBar position='sticky'>\n//         <Toolbar className={classes.toolbar}>\n//         <div className={classes.logo}>\n//             <FastfoodSharp className={classes.icon}/>\n//             <Typography variant='h4'>\n//                 FoodFinder NU\n//             </Typography>\n//         </div>\n//         <div>\n//             <Button variant='contained'>Log in</Button>\n//         </div>\n//     </Toolbar>\n// </AppBar>\n//         <div className={classes.container}>\n//             <Container maxWidth='md'>\n//                 <Typography variant='h5' align='center' color='textSecondary' paragraph>\n//                     Got lots of leftover food from an event? Don't know what to do with all of it? \n//                     Post your food here to alert Wildcats that there's free food waiting for them on campus!\n//                 </Typography>\n//             </Container>\n//         </div>\n//         <Container className={classes.cardGrid} maxWidth='md'>\n//             {/* Grid is for responsive design and for positioning things on the page */}\n//             <Grid container spacing={4} justifyContent='space-around'>\n//                 {cards.map((card) => (\n//                     <Grid item key={card} xs={9} sm={9} md={9} lg={9}>\n//                         <Card className={classes.card}>\n//                             <CardMedia \n//                                 className={classes.cardMedia}\n//                                 image='https://source.unsplash.com/random'\n//                                 title='Image title'\n//                             />\n//                             <CardContent className={classes.cardContent}>\n//                                 <Typography gutterBottom variant='h6'>\n//                                     <b>Food/Description:</b> Insomnia Cookies\n//                                 </Typography>\n//                                 <Typography gutterBottom variant='h6'>\n//                                     <b>Location:</b> Norris\n//                                 </Typography>\n//                                 <Typography gutterBottom variant='h6'>\n//                                     <b>Posted at:</b> 5:00 pm\n//                                 </Typography>\n//                                 <Typography gutterBottom variant='h6'>\n//                                     <b>From:</b> Willie the Wildcat\n//                                 </Typography>\n//                             </CardContent>\n//                             <Grid container justifyContent='flex-end'>\n//                                     <Button size='medium' color='secondary' style={{float: 'right'}}>\n//                                         Delete\n//                                     </Button>\n//                             </Grid>\n//                         </Card>\n//                     </Grid>\n//                 ))}\n//             </Grid>\n//         </Container>\n//     </main>\n//     <footer className={classes.footer}>\n//         <Typography variant='h6' align='center' gutterBottom>\n//             Yuh get sum free food don't waste\n//         </Typography>\n//         <Grid container justifyContent=\"center\">\n//             <Button align='center'>\n//                 About\n//             </Button>\n//         </Grid>\n//     </footer>\n// </>","map":{"version":3,"names":["React","useEffect","useState","Grow","Grid","Container","useStyles","Posts","Form","Navbar","useDispatch","getPosts","BrowserRouter","Switch","Route","App","currentId","setCurrentId","classes","dispatch","mainContainer"],"sources":["/Users/annacai/Desktop/material-ui-demo/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Grow, Grid, Container } from '@material-ui/core';\nimport useStyles from './styles';\nimport Posts from './components/Posts/Posts.js';\nimport Form from './components/Form/Form.js';\nimport Navbar from \"./components/Navbar/Navbar\";\n\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from './actions/posts';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n// have to keep track of the current post id in APP.JS bc we have to share the state of current id between the post and form,\n// and our app is the only parent component that is parent to both post and form\n\nconst App = () => {\n    const [currentId, setCurrentId] = useState(null);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        // dispatch getPosts action, which ensures that for every change, we're going to get new post(s)\n        dispatch(getPosts());\n    }, [dispatch]);\n\n    return (\n        <Container maxwidth=\"lg\">\n            <Navbar />\n            <Grow in>\n                <Container >\n                    <Grid className={classes.mainContainer} container justifyContent='space-between' alignitems='stretch' spacing={3}>\n                        <Grid item xs={12} sm={7}>\n                            <Posts setCurrentId={setCurrentId}/>\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <Form currentId={currentId} setCurrentId={setCurrentId}/>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Grow>\n\n        </Container>\n    )\n};\n\nexport default App;\n\n\n\n\n\n        // <>\n        //     <CssBaseline />\n        //     <main className={classes.entireBody}>\n                    // <AppBar position='sticky'>\n                    //         <Toolbar className={classes.toolbar}>\n                    //         <div className={classes.logo}>\n                    //             <FastfoodSharp className={classes.icon}/>\n                    //             <Typography variant='h4'>\n                    //                 FoodFinder NU\n                    //             </Typography>\n                    //         </div>\n                    //         <div>\n                    //             <Button variant='contained'>Log in</Button>\n                    //         </div>\n                    //     </Toolbar>\n                    // </AppBar>\n        //         <div className={classes.container}>\n        //             <Container maxWidth='md'>\n        //                 <Typography variant='h5' align='center' color='textSecondary' paragraph>\n        //                     Got lots of leftover food from an event? Don't know what to do with all of it? \n        //                     Post your food here to alert Wildcats that there's free food waiting for them on campus!\n        //                 </Typography>\n        //             </Container>\n        //         </div>\n        //         <Container className={classes.cardGrid} maxWidth='md'>\n        //             {/* Grid is for responsive design and for positioning things on the page */}\n        //             <Grid container spacing={4} justifyContent='space-around'>\n        //                 {cards.map((card) => (\n        //                     <Grid item key={card} xs={9} sm={9} md={9} lg={9}>\n        //                         <Card className={classes.card}>\n        //                             <CardMedia \n        //                                 className={classes.cardMedia}\n        //                                 image='https://source.unsplash.com/random'\n        //                                 title='Image title'\n        //                             />\n        //                             <CardContent className={classes.cardContent}>\n\n        //                                 <Typography gutterBottom variant='h6'>\n        //                                     <b>Food/Description:</b> Insomnia Cookies\n        //                                 </Typography>\n        //                                 <Typography gutterBottom variant='h6'>\n        //                                     <b>Location:</b> Norris\n        //                                 </Typography>\n        //                                 <Typography gutterBottom variant='h6'>\n        //                                     <b>Posted at:</b> 5:00 pm\n        //                                 </Typography>\n        //                                 <Typography gutterBottom variant='h6'>\n        //                                     <b>From:</b> Willie the Wildcat\n        //                                 </Typography>\n        //                             </CardContent>\n        //                             <Grid container justifyContent='flex-end'>\n        //                                     <Button size='medium' color='secondary' style={{float: 'right'}}>\n        //                                         Delete\n        //                                     </Button>\n        //                             </Grid>\n        //                         </Card>\n        //                     </Grid>\n        //                 ))}\n        //             </Grid>\n        //         </Container>\n        //     </main>\n        //     <footer className={classes.footer}>\n        //         <Typography variant='h6' align='center' gutterBottom>\n        //             Yuh get sum free food don't waste\n        //         </Typography>\n        //         <Grid container justifyContent=\"center\">\n        //             <Button align='center'>\n        //                 About\n        //             </Button>\n        //         </Grid>\n        //     </footer>\n        // </>"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,SAArB,QAAsC,mBAAtC;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C,C,CAEA;AACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;EACd,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAMgB,OAAO,GAAGZ,SAAS,EAAzB;EACA,MAAMa,QAAQ,GAAGT,WAAW,EAA5B;EAEAT,SAAS,CAAC,MAAM;IACZ;IACAkB,QAAQ,CAACR,QAAQ,EAAT,CAAR;EACH,CAHQ,EAGN,CAACQ,QAAD,CAHM,CAAT;EAKA,oBACI,oBAAC,SAAD;IAAW,QAAQ,EAAC,IAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI,oBAAC,IAAD;IAAM,EAAE,MAAR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,IAAD;IAAM,SAAS,EAAED,OAAO,CAACE,aAAzB;IAAwC,SAAS,MAAjD;IAAkD,cAAc,EAAC,eAAjE;IAAiF,UAAU,EAAC,SAA5F;IAAsG,OAAO,EAAE,CAA/G;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,EAAf;IAAmB,EAAE,EAAE,CAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,KAAD;IAAO,YAAY,EAAEH,YAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ,eAII,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,EAAf;IAAmB,EAAE,EAAE,CAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,IAAD;IAAM,SAAS,EAAED,SAAjB;IAA4B,YAAY,EAAEC,YAA1C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CAJJ,CADJ,CADJ,CAFJ,CADJ;AAkBH,CA5BD;;AA8BA,eAAeF,GAAf,C,CAMQ;AACA;AACA;AACY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}